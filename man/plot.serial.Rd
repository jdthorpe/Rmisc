% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/series plot.r
\name{plot.serial}
\alias{plot.serial}
\title{Plot data in a series}
\usage{
\method{plot}{serial}(x, y, id, ax.labels = if (inherits(id, "factor"))
  levels(id) else unique(id), bg.panel, sep.col = "gray42", sep.lty = 2,
  sep.lwd = 1, xlab = deparse(substitute(x)),
  ylab = deparse(substitute(y)), log = "", axes = T, add = F, main,
  xlim, ylim, m.text, m.side = 2, fun, ...)
}
\arguments{
\item{x}{the horizontal position of the points in the plot \strong{NOTE}
that only one of x,y should be specified.  For horizontal layout, y, should be specified.}

\item{y}{the vertical position of the points in the plot \strong{NOTE} that
only one of x,y should be specified.  For vertical layout, y, should be specified.}

\item{id}{a grouping variable which indicates the points that will appear
in the same series.  (similar to the argument INDEX of \code{link[base]{tapply}})}

\item{ax.labels}{= labels of the individual series.  note that can be
used to arrange or filter the data}

\item{bg.panel}{color for background panels}

\item{sep.col}{= 'gray42', color of the lines that separate the rows (columns). (default= 'gray42')}

\item{sep.lty}{= 2, type of the the lines that separate the rows (columns). (default= 2)}

\item{sep.lwd}{= 1, width of the the lines that separate the rows (columns). (default= 1)}

\item{xlab}{see \code{link[base]{plot}} for details}

\item{ylab}{see \code{link[base]{plot}} for details}

\item{log}{see \code{link[base]{plot}} for details}

\item{axes}{see \code{link[base]{plot}} for details}

\item{add}{see \code{link[base]{plot}} for details}

\item{main}{see \code{link[base]{plot}} for details}

\item{xlim}{see \code{link[base]{plot}} for details}

\item{ylim}{see \code{link[base]{plot}} for details}

\item{m.text}{see \code{link[base]{plot}} for details}

\item{fun,#}{optional custom plotting function}

\item{...}{}

\item{if}{TRUE, the figure is added to an existing plot allowing you plot
lines and then add labels}

\item{m.side=2}{see \code{link[base]{plot}} for details}
}
\description{
Plot data with 'timeline' like series (not in fact an S3 method for class 'serial')
}
\note{
Plot arguments are applied to individual points when
length(arg) == length(id).  Otherwise, the values are
cycled between rows (columns) of the figure.
}
\examples{
m = 20;n=3
x = rnorm(m*n)
id = letters[rep(1:m,n)]
pch = sample(LETTERS,m*n,replace=T)
data.frame(x,id,pch)[id=='a',]
data.frame(x,id,pch)[id=='r',]

plot.serial(x = x,
			id = id,
			type='b',
			pch = pch,# argument applied to inividual points when length(arg) == length(y)
			cex = 1.2,# applied to all values
			col = c('black','brown3','dodgerblue3'),# cycle through values with length(arg) != length(y)
			bg = c(NA,'gray55'),# cycle through values with length(arg) != length(y)
			main ='foo',
			xlab = 'Value',
			ylab = 'ID')

# --------------------------------------------------
# veritical orientation + filtering via ax.labels parameter
# --------------------------------------------------
plot.serial(y = x,
			id = id,
			ax.labels = letters[1:13*2], # filter and orginize the rows (columns)
			type='b',
			pch = pch,# argument applied to inividual points when length(arg) == length(y)
			cex = 1.2,# applied to all values
			bg = c('green','gray55'),# cycle through values with length(arg) != length(y)
			main ='foo',
			xlab = 'ID',
			ylab = 'Value')

# --------------------------------------------------
# an ugly but illustrative use of 'add = T'
# --------------------------------------------------
plot.serial(x = x,
			id = id,
			type='b',
			pch = NA,
			col = c('black','brown3','dodgerblue3'),# cycle through values with length(arg) != length(y)
			bg = c(NA,'gray55'),# cycle through values with length(arg) != length(y)
			xlab = 'Value',
			ylab = 'ID')

plot.serial(x = x,
			id = id,
			add=T,
			labels = paste(pch,tolower(pch)),# argument applied to inividual points when length(arg) == length(y)
			cex = 1.2,# applied to all values
			col = c('black','brown3','dodgerblue3'),# cycle through values with length(arg) != length(y)
			)
}

