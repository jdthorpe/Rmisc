% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/threshold.r
\name{threshold}
\alias{threshold}
\title{Calculate a threshold from a set of marker values, and associted case status}
\usage{
threshold(x, probs, ...)
}
\arguments{
\item{x}{a vector of marker values from unaffected individuals}

\item{probs}{Specificity threshold(s) for the returned threshold(s).}

\item{specificity.bias='over'}{}

\item{case.values}{}

\item{sensitivity.bias='proportional'}{}

\item{na.rm}{If TRUE, missing values are dropped from x and case.values. (default = FALSE)}

\item{ci}{If TRUE, a confidence interval is included in the outputs (default = FALSE)}

\item{conf.level}{confidence level of the interval. (default = 0.95)}

\item{verbose}{If TRUE, thresholds are printed out. (default = FALSE)}

\item{quietly}{If TRUE, warning messages regarding setting boundaries
at outlying positions (such as "Threshold is the highest value among
all observations") are suppressed. (default = FALSE).}
}
\description{
Calculate a threshold from a set of marker values, and associted case status.
This is a particularly complicated topic, because there is a lot of choice in
how to calculate a threshold from a small dataset. In particular, if there
are wide gaps in beween sequential marker values in the dataset, there is a
range of thresholds which result in identical specificity levels (and possibly
differing sensitivity levels) in your fitting dataset.
}
\details{
The choice of threshold will influence the precision and repoducability of
the estimated threshold.
}
\examples{
# an example where a control ties the specificity level
threshold(x = 1:10, spec = 0.9) # by default the threshold is higher than the value

# an example where two controls have the same value and the specificity is between them
threshold(x = c(2:10,9), spec = 0.9) # by default the threshold is higher than the tied values

# an example where there are cases values between the two controls just above and below the specificity level
threshold(x = 1:10,spec = 0.95, cases = 9+((1:9/10)))
threshold(x = 1:10,spec = 0.95, cases = 9+((1:9/10)),sensitivity.bias = 'median')
threshold(x = 1:10,spec = 0.95, cases = 9+((1:9/10)),sensitivity.bias = 'mean') #note that since the mean would give a threshold equal to observed value, it defaults to the median
threshold(x = 1:10,spec = 0.95, cases = 9+((1:9/10)),sensitivity.bias = 'lower')
threshold(x = 1:10,spec = 0.95, cases = 9+((1:9/10)),sensitivity.bias = 'upper')

# an example with the specificity at the top level
threshold(x = c(1,1:10,10),spec = 0.99)
# an example with the specificity at the bottom level
threshold(x = c(1,1:10,10),spec = 0.01,specificity.bias='under')

spec <- 0.70
temp <- c()
n = 50
x = round(rnorm(n),2)
for(i in 0:n){
	(temp[i+1] <- sum( x < threshold(x=x,spec = i/n)))
}
max(abs(temp - (0:n)))
max(table(x))
threshold(x = rnorm(20)
		 ,spec =0.99
		 , cases = rnorm(20) + 1
		 ,specificity.bias='over'
		 ,sensitivity.bias='proportional'
		 )
}

